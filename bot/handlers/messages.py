from aiogram import Router, types
from aiogram.filters import Command
from bot.services.calculator import calculate_customs
from bot.utils.parsers import parse_car_info

router = Router()

@router.message()
async def handle_car_info(message: types.Message):
    parsed_data = parse_car_info(message.text)

    if not parsed_data:
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞. –ü—Ä–∏–º–µ—Ä:\n"
            "<i>BMW X5 2022, 3.0 –ª, 249 –ª.—Å., 50000$, 30000 –∫–º</i>",
            parse_mode="HTML"
        )
        return

    try:
        result = calculate_customs(
            price_usd=parsed_data['price'],
            engine=parsed_data['engine'],
            power=parsed_data['power'],
            year=parsed_data['year']
        )

        response = (
            f"üöó <b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b>\n"
            f"‚Ä¢ –ì–æ–¥: {parsed_data['year']}\n"
            f"‚Ä¢ –û–±—ä–µ–º: {parsed_data['engine']} –ª\n"
            f"‚Ä¢ –ú–æ—â–Ω–æ—Å—Ç—å: {parsed_data['power']} –ª.—Å.\n"
            f"‚Ä¢ –¶–µ–Ω–∞: {parsed_data['price']:,}$\n\n"
            f"üìå *–†–∞—Å—á–µ—Ç —Ä–∞—Å—Ç–∞–º–æ–∂–∫–∏:*\n"
            f"- –ü–æ—à–ª–∏–Ω–∞: {result['customs_duty']:,.0f} ‚ÇΩ\n"
            f"- –ê–∫—Ü–∏–∑: {result['excise']:,.0f} ‚ÇΩ\n"
            f"- –ù–î–°: {result['vat']:,.0f} ‚ÇΩ\n"
            f"- –£—Ç–∏–ª—å—Å–±–æ—Ä: {result['recycling_fee']:,.0f} ‚ÇΩ\n"
            f"- –î–æ–ø. —Ä–∞—Å—Ö–æ–¥—ã: {result['additional_costs']:,.0f} ‚ÇΩ\n\n"
            f"üíµ *–ò—Ç–æ–≥–æ: {result['total']:,.0f} ‚ÇΩ*"
        )

        await message.answer(response, parse_mode="HTML")

    except Exception as e:
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")